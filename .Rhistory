dataNetwork <- ToDataFrameNetwork(hdata,"name")
return(simpleNetwork(dataNetwork[-3],fontSize = 12))
}
bim(1)
library(plumber)
install.packages("plumber")
library(plumber)
r <- plumb("try.R")
r$run(port=8000)
r <- plumb("try.R")
r$run(port=8000)
r <- plumb("try.R")
r$run(port=8080)
r <- plumb("try.R")
r$run(port=8080)
bim(1)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
return(mynet)
}
bim(1)
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
return(mynet)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
return(mynet)
}
bim(1)
r <- plumb("try.R")
r <- plumb("try.R")
r$run(port=8080)
r$run(port=8080)
r <- plumb("try.R")
is.list(mynet)
toJSON(mynet, pretty = TRUE, auto_unbox = TRUE)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
toJSON(mynet, pretty = TRUE, auto_unbox = TRUE)
}
toJSON(mynet, pretty = TRUE, auto_unbox = TRUE)
library(rjson)
library(rjson)
toJSON(mynet)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
toJSON(mynet)
}
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
toJSON(mynet)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
toJSON(mynet)
}
bim(1)
bim(1)
bim(1)
return(toJSON(mynet))
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
return(toJSON(mynet))
}
bim(1)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
return(toJSON(mynet))
library(RJSONIO)
dnet <- toJSON(mynet)
bim(1)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
dnet <- toJSON(mynet)
return(dnet)
}
bim(1)
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
dnet <- toJSON(mynet)
return(dnet)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
dnet <- toJSON(mynet)
return(dnet)
}
bim(1)
bim(1)
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
dnet <- toJSON(mynet)
#* @post /mymodel
bim<-function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
val <- list("1")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$AOM, cdata$Userstory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],fontSize = 12)
is.list(mynet)
library(RJSONIO)
dnet <- toJSON(mynet)
}
bim(1)
bim(1)
dnet <- toJSON(mynet)
print(dnet)
r <- plumb("try.R")
r <- plumb("try.R")
r <- plumb("try.R")
r$run(port=8000)
library(plumber)
r <- plumb("try.R")
r$run(port=8000)
library(data.table)
library(data.tree)
library(networkD3)
library(htmlwidgets)
getwd()
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
print(cdata)
cdata$pathString <- paste(val, cdata$BusinessField, cdata$AOM, cdata$XOM, cdata$UserStory,cdata$TestCase, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],nodeColour = "blue",linkColour = "green",zoom=T,fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],linkColour = "#666",nodeColour = "blue",zoom=T,fontSize = 12)
is.list(mynet)
library(htmlTable)
# writeLines(as.html(mynet), "MyFlexTable.html")
# Save ggplotly as widget in file test.html
saveWidget(mynet, file = "test.html");
#return(result)
return("Your Report is saved in path : C:/Users/punigupta/Documents/mymodel/test.html")
library(RJSONIO)
#* @get /mymodel
bim <- function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
library(htmlwidgets)
getwd()
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
print(cdata)
cdata$pathString <- paste(val, cdata$BusinessField, cdata$AOM, cdata$XOM, cdata$UserStory,cdata$TestCase, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],nodeColour = "blue",linkColour = "green",zoom=T,fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],linkColour = "#666",nodeColour = "blue",zoom=T,fontSize = 12)
is.list(mynet)
library(RJSONIO)
library(htmlTable)
# dnet <- htmlTableWidgetOutput(mynet)
# print(dnet)
# writeLines(as.html(mynet), "MyFlexTable.html")
# Save ggplotly as widget in file test.html
saveWidget(mynet, file = "test.html");
#result <-toJSON( url="C:/Users/punigupta/Documents/mymodel/test.html")
#return(result)
return("Your Report is saved in path : C:/Users/punigupta/Documents/mymodel/test.html")
}
library(plumber)
r <- plumb("try.R")
r$run(port=8000)
library(data.table)
library(data.tree)
library(networkD3)
library(htmlwidgets)
getwd()
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
print(cdata)
cdata$pathString <- paste(val, cdata$Feature, cdata$XOM, cdata$UserStory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],nodeColour = "blue",linkColour = "green",zoom=T,fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],linkColour = "#666",nodeColour = "blue",zoom=T,fontSize = 12)
is.list(mynet)
library(RJSONIO)
library(htmlTable)
# writeLines(as.html(mynet), "MyFlexTable.html")
# Save ggplotly as widget in file test.html
saveWidget(mynet, file = "test.html");
#return(result)
return("Your Report is saved in path : C:/Users/punigupta/Documents/mymodel/test.html")
#* @get /mymodel
bim <- function(val)
{
library(data.table)
library(data.tree)
library(networkD3)
library(htmlwidgets)
getwd()
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
print(cdata)
cdata$pathString <- paste(val, cdata$Feature, cdata$XOM, cdata$UserStory, sep = "/")
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],nodeColour = "blue",linkColour = "green",zoom=T,fontSize = 12)
mynet <- simpleNetwork(dataNetwork[-3],linkColour = "#666",nodeColour = "blue",zoom=T,fontSize = 12)
is.list(mynet)
library(RJSONIO)
library(htmlTable)
# dnet <- htmlTableWidgetOutput(mynet)
# print(dnet)
# writeLines(as.html(mynet), "MyFlexTable.html")
# Save ggplotly as widget in file test.html
saveWidget(mynet, file = "test.html");
#result <-toJSON( url="C:/Users/punigupta/Documents/mymodel/test.html")
#return(result)
return("Your Report is saved in path : C:/Users/punigupta/Documents/mymodel/test.html")
}
library(plumber)
r <- plumb("try.R")
r$run(port=8000)
library(data.table)
library(data.tree)
library(networkD3)
library(htmlwidgets)
getwd()
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
#cdata <- subset(mydata, BOM == "1")
cdata <- mydata[mydata[[k[1]]] == val ,]
cdata$pathString <- paste(val, cdata$Feature, cdata$XOM, cdata$UserStory, sep = "/")
library(data.table)
library(data.tree)
library(networkD3)
library(htmlwidgets)
getwd()
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
cdata <- subset(mydata, BusinessField == val)
cdata$pathString <- paste(val, cdata$Feature, cdata$XOM, cdata$UserStory, sep = "/")
print(cdata)
print(cdata)
cdata$pathString <- paste(val, cdata$Feature, cdata$XOM, cdata$UserStory, sep = "/")
source('~/mymodel/try.R')
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
cdata <- subset(mydata, BusinessField == "ClaimType")
print(cdata)
cdata$pathString <- paste(val, cdata$Feature, cdata$XOM, cdata$UserStory, sep = "/")
print(cdata)
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],nodeColour = "blue",linkColour = "green",zoom=T,fontSize = 12)
source('~/mymodel/try.R')
source('~/mymodel/try.R')
source('~/mymodel/try.R')
source('~/mymodel/try.R')
library(data.table)
library(data.tree)
library(networkD3)
library(htmlwidgets)
getwd()
setwd("C:/Users/punigupta/Documents/mymodel")
mydata <- read.csv("data.csv")
is.data.frame(mydata)
k <- c(colnames(mydata))
v <- val
cdata <- subset(mydata, BusinessField == val)
print(cdata)
cdata$pathString <- paste(val, cdata$Feature, cdata$XOM, cdata$UserStory, sep = "/")
print(cdata)
hdata <- as.Node(cdata)
plot(hdata)
dataNetwork <- ToDataFrameNetwork(hdata,"name")
simpleNetwork(dataNetwork[-3],nodeColour = "blue",linkColour = "green",zoom=T,fontSize = 12)
library(htmlTable)
mynet <- simpleNetwork(dataNetwork[-3],linkColour = "#666",nodeColour = "blue",zoom=T,fontSize = 12)
is.list(mynet)
library(RJSONIO)
library(plumber)
r <- plumb("try.R")
r$run(port=8000)
